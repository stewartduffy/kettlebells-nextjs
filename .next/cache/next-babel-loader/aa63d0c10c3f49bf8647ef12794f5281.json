{"ast":null,"code":"const axios = require(\"axios\").default;\n\nconst cheerio = require(\"cheerio\"); // const ejs = require(\"ejs\");\n\n\nconst sitesToCheck = [\"https://www.industrialathletic.com/4kg-cast-iron-kettlebell\", \"https://www.industrialathletic.com/12kg-cast-iron-kettlebell\", \"https://www.industrialathletic.com/16kg-cast-iron-kettlebell\"];\n\nconst getHtml = async url => {\n  const html = await axios.get(url);\n  return {\n    url,\n    buttonValue: getAddToCartButton(html)\n  };\n};\n\nfunction getAddToCartButton(response) {\n  // load up cheerio\n  const $ = cheerio.load(response.data);\n  const buttonValue = $(\"#form-action-addToCart\").attr(\"value\");\n  console.log(buttonValue);\n  return buttonValue;\n} // Fake users data\n// const users = [{ id: 1 }, { id: 2 }, { id: 3 }];\n\n\nexport default (async (req, res) => {\n  try {\n    const data = await Promise.all(sitesToCheck.map(getHtml));\n    console.log(data); // const template =\n    //   \"<ul> <% results.forEach(function(result){ %><li><%= result.url %> - <%= result.buttonValue %></li><% }); %></ul>\";\n\n    const htmlResponse = ejs.render(template, {\n      results: data\n    }); // res.send(htmlResponse);\n\n    res.status(200).json(htmlResponse);\n  } catch (error) {\n    console.error(error);\n  } // Get data from your database\n  //   res.status(200).json(users);\n\n});","map":{"version":3,"sources":["/Users/stewartduffy/repos/personal/kettlebells-nextjs/api-routes-middleware/pages/api/users.js"],"names":["axios","require","default","cheerio","sitesToCheck","getHtml","url","html","get","buttonValue","getAddToCartButton","response","$","load","data","attr","console","log","req","res","Promise","all","map","htmlResponse","ejs","render","template","results","status","json","error"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,MAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB,C,CACA;;;AAEA,MAAMG,YAAY,GAAG,CACnB,6DADmB,EAEnB,8DAFmB,EAGnB,8DAHmB,CAArB;;AAMA,MAAMC,OAAO,GAAG,MAAOC,GAAP,IAAe;AAC7B,QAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUF,GAAV,CAAnB;AACA,SAAO;AACLA,IAAAA,GADK;AAELG,IAAAA,WAAW,EAAEC,kBAAkB,CAACH,IAAD;AAF1B,GAAP;AAID,CAND;;AAQA,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC;AACA,QAAMC,CAAC,GAAGT,OAAO,CAACU,IAAR,CAAaF,QAAQ,CAACG,IAAtB,CAAV;AACA,QAAML,WAAW,GAAGG,CAAC,CAAC,wBAAD,CAAD,CAA4BG,IAA5B,CAAiC,OAAjC,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACA,SAAOA,WAAP;AACD,C,CAED;AACA;;;AAEA,gBAAe,OAAOS,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAI;AACF,UAAML,IAAI,GAAG,MAAMM,OAAO,CAACC,GAAR,CAAYjB,YAAY,CAACkB,GAAb,CAAiBjB,OAAjB,CAAZ,CAAnB;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHE,CAKF;AACA;;AAEA,UAAMS,YAAY,GAAGC,GAAG,CAACC,MAAJ,CAAWC,QAAX,EAAqB;AAAEC,MAAAA,OAAO,EAAEb;AAAX,KAArB,CAArB,CARE,CAUF;;AACAK,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,YAArB;AACD,GAZD,CAYE,OAAOO,KAAP,EAAc;AACdd,IAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACD,GAfgC,CAiBjC;AACA;;AACD,CAnBD","sourcesContent":["const axios = require(\"axios\").default;\nconst cheerio = require(\"cheerio\");\n// const ejs = require(\"ejs\");\n\nconst sitesToCheck = [\n  \"https://www.industrialathletic.com/4kg-cast-iron-kettlebell\",\n  \"https://www.industrialathletic.com/12kg-cast-iron-kettlebell\",\n  \"https://www.industrialathletic.com/16kg-cast-iron-kettlebell\",\n];\n\nconst getHtml = async (url) => {\n  const html = await axios.get(url);\n  return {\n    url,\n    buttonValue: getAddToCartButton(html),\n  };\n};\n\nfunction getAddToCartButton(response) {\n  // load up cheerio\n  const $ = cheerio.load(response.data);\n  const buttonValue = $(\"#form-action-addToCart\").attr(\"value\");\n  console.log(buttonValue);\n  return buttonValue;\n}\n\n// Fake users data\n// const users = [{ id: 1 }, { id: 2 }, { id: 3 }];\n\nexport default async (req, res) => {\n  try {\n    const data = await Promise.all(sitesToCheck.map(getHtml));\n\n    console.log(data);\n\n    // const template =\n    //   \"<ul> <% results.forEach(function(result){ %><li><%= result.url %> - <%= result.buttonValue %></li><% }); %></ul>\";\n\n    const htmlResponse = ejs.render(template, { results: data });\n\n    // res.send(htmlResponse);\n    res.status(200).json(htmlResponse);\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Get data from your database\n  //   res.status(200).json(users);\n};\n"]},"metadata":{},"sourceType":"module"}