{"ast":null,"code":"import { serialize } from 'cookie';\n/**\n * This sets `cookie` on `res` object\n */\n\nconst cookie = (res, name, value, options = {}) => {\n  const stringValue = typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value);\n\n  if ('maxAge' in options) {\n    options.expires = new Date(Date.now() + options.maxAge);\n    options.maxAge /= 1000;\n  }\n\n  res.setHeader('Set-Cookie', serialize(name, String(stringValue), options));\n};\n/**\n * Adds `cookie` function on `res.cookie` to set cookies for response\n */\n\n\nconst cookies = handler => (req, res) => {\n  res.cookie = (name, value, options) => cookie(res, name, value, options);\n\n  return handler(req, res);\n};\n\nexport default cookies;","map":{"version":3,"sources":["/Users/stewartduffy/repos/personal/kettlebells-nextjs/api-routes-middleware/utils/cookies.js"],"names":["serialize","cookie","res","name","value","options","stringValue","JSON","stringify","String","expires","Date","now","maxAge","setHeader","cookies","handler","req"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA;;;;AAGA,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmBC,OAAO,GAAG,EAA7B,KAAoC;AACjD,QAAMC,WAAW,GACf,OAAOF,KAAP,KAAiB,QAAjB,GAA4B,OAAOG,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAnC,GAA2DK,MAAM,CAACL,KAAD,CADnE;;AAGA,MAAI,YAAYC,OAAhB,EAAyB;AACvBA,IAAAA,OAAO,CAACK,OAAR,GAAkB,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACQ,MAA9B,CAAlB;AACAR,IAAAA,OAAO,CAACQ,MAAR,IAAkB,IAAlB;AACD;;AAEDX,EAAAA,GAAG,CAACY,SAAJ,CAAc,YAAd,EAA4Bd,SAAS,CAACG,IAAD,EAAOM,MAAM,CAACH,WAAD,CAAb,EAA4BD,OAA5B,CAArC;AACD,CAVD;AAYA;;;;;AAGA,MAAMU,OAAO,GAAGC,OAAO,IAAI,CAACC,GAAD,EAAMf,GAAN,KAAc;AACvCA,EAAAA,GAAG,CAACD,MAAJ,GAAa,CAACE,IAAD,EAAOC,KAAP,EAAcC,OAAd,KAA0BJ,MAAM,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmBC,OAAnB,CAA7C;;AAEA,SAAOW,OAAO,CAACC,GAAD,EAAMf,GAAN,CAAd;AACD,CAJD;;AAMA,eAAea,OAAf","sourcesContent":["import { serialize } from 'cookie'\n\n/**\n * This sets `cookie` on `res` object\n */\nconst cookie = (res, name, value, options = {}) => {\n  const stringValue =\n    typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value)\n\n  if ('maxAge' in options) {\n    options.expires = new Date(Date.now() + options.maxAge)\n    options.maxAge /= 1000\n  }\n\n  res.setHeader('Set-Cookie', serialize(name, String(stringValue), options))\n}\n\n/**\n * Adds `cookie` function on `res.cookie` to set cookies for response\n */\nconst cookies = handler => (req, res) => {\n  res.cookie = (name, value, options) => cookie(res, name, value, options)\n\n  return handler(req, res)\n}\n\nexport default cookies\n"]},"metadata":{},"sourceType":"module"}